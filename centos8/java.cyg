##############################################################################
# maali config file for Java
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="binary"

# URL to download the source code from - it's java
MAALI_URL=""
# note java is downloaded at 
# http://www.oracle.com/technetwork/java/javase/downloads"
# you want the jdk download jdk-****-linux-x64.tar.gz and 
# copy it to the MAALI_SRC directory which is defined in the $MAALI_SYSTEM.config 
# that is in ~/.maali

MAALI_DST="$MAALI_SRC/jdk-${MAALI_TOOL_VERSION}-linux-x64.tar.gz"

# where the unpacked source code is located - no source code for you
MAALI_TOOL_BUILD_DIR=""

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
MAALI_TOOL_PREREQ=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_JAVA_HOME='$MAALI_APP_HOME'
#MAALI_MODULE_SET_SETENV='JAVA_HOME=$MAALI_APP_HOME'

##############################################################################

function maali_unpack {
   maali_run "echo .... supressing unpacking java source as it builds in place"
}

##############################################################################

function maali_build {

  cd $MAALI_INSTALL_DIR
  cd ..
  rmdir $MAALI_INSTALL_DIR
  tar zxf $MAALI_DST
  maali_run "echo $MAALI_INSTALL_DIR"
  mv jdk-$MAALI_TOOL_VERSION $MAALI_INSTALL_DIR
  #Hmmm 7/8 unpacks like "jdk1.8.0_40" jdk1.{$MAALI_JAVA_MAJOR_VERSION}.0_{$MAALI_JAVA_MAJOR_VERSION}
  #echo jdk1.${MAALI_JAVA_MAJOR_VERSION}.0_${MAALI_JAVA_UPDATE_VERSION} >> /tmp/variable-test
  # mv jdk1.${MAALI_JAVA_MAJOR_VERSION}.0_${MAALI_JAVA_UPDATE_VERSION} $MAALI_INSTALL_DIR
}

##############################################################################
