##############################################################################
# maali config file for metis
##############################################################################
read -r -d '' MAALI_MODULE_WHATIS << EOF

 For further information see: 
 http://glaros.dtc.umn.edu/gkhome/views/metis

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"
#MAALI_URL="http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/OLD/metis-5.0.3.tar.gz"
# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_PREREQ="cmake/3.21.3"

# add additional configure options
MAALI_TOOL_CONFIGURE='-DCMAKE_BUILD_TYPE:STRING=Release '
MAALI_TOOL_CONFIGURE+='-DOPENMP=ON '
MAALI_TOOL_CONFIGURE+='-DPCRE=ON '
MAALI_TOOL_CONFIGURE+='-DSHARED=ON '
#MAALI_TOOL_CONFIGURE+='-DGKLIB_PATH=${MAALI_TOOL_BUILD_DIR}/GKLIB '


# for auto-building module files
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_PATH=1

##############################################################################

function maali_build {
  
  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "make config shared=1 openmp=1 prefix=$MAALI_INSTALL_DIR cc=$CC"
  maali_run "make install"

}

##############################################################################